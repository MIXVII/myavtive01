name: CI
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
env:
  DOTNET_VERSION: '6.0.x'
  
jobs:
  build-and-test:
    name: build-and-test-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
#         os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [windows-latest]
    steps:
    - name: run automated 
      uses: actions/checkout@v2
    - name: setting path
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true
    - name: run test 
      run: |
        ls
        dotnet test --help 
        dotnet test  test/MASA.Contrib.DDD.Domain.Repository.EF.CustomRepository/MASA.Contrib.DDD.Domain.Repository.EF.CustomRepository.csproj /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
        ls test/MASA.Contrib.DDD.Domain.Repository.EF.CustomRepository/TestResults
    - name: push coverage report to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.COVERALLMYAVITVE01_TOKEN }}
        path-to-lcov: test/MASA.BuildingBlocks.DDD.Domain.Tests/TestResults/*


#        ls
#        cd test/MASA.BuildingBlocks.DDD.Domain.Tests
#        dotnet add package JunitXml.TestLogger   
#        dotnet test --logger:"junit;LogFilePath=./test.xml"
#        ls
#        echo $SUPER_SECRET
#    - name: upload codecov
#    - uses: codecov/codecov-action@v2
#      env:
#        CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
#      with:
#        token: ${{ CODECOV_TOKEN }}
#        directory: test/MASA.BuildingBlocks.DDD.Domain.Tests
#        files: ./test.xml
#        flags: unittests
#        name: codecov-umbrella
#        fail_ci_if_error: true 
#        verbose: true
